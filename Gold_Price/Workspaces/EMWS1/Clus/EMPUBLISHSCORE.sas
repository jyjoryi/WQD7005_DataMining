*****************************************;
*** Begin Scoring Code from PROC DMVQ ***;
*****************************************;


*** Begin Class Look-up, Standardization, Replacement ;
drop _dm_bad; _dm_bad = 0;

*** Generate dummy variables for all_day_maintain ;
drop all_day_maintain0 all_day_maintain1 ;
if missing( all_day_maintain ) then do;
   all_day_maintain0 = .;
   all_day_maintain1 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( all_day_maintain , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      all_day_maintain0 = 0.44537463372291;
      all_day_maintain1 = -0.44537463372291;
   end;
   else if _dm12 = '1'  then do;
      all_day_maintain0 = -1.12203455020928;
      all_day_maintain1 = 1.12203455020928;
   end;
   else do;
      all_day_maintain0 = .;
      all_day_maintain1 = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for closing_at_daily_high ;
drop closing_at_daily_high0 closing_at_daily_high1 ;
if missing( closing_at_daily_high ) then do;
   closing_at_daily_high0 = .;
   closing_at_daily_high1 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( closing_at_daily_high , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      closing_at_daily_high0 = 0.52748632425818;
      closing_at_daily_high1 = -0.52748632425818;
   end;
   else if _dm12 = '1'  then do;
      closing_at_daily_high0 = -0.94737191059254;
      closing_at_daily_high1 = 0.94737191059254;
   end;
   else do;
      closing_at_daily_high0 = .;
      closing_at_daily_high1 = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for closing_at_daily_low ;
drop closing_at_daily_low0 closing_at_daily_low1 ;
if missing( closing_at_daily_low ) then do;
   closing_at_daily_low0 = .;
   closing_at_daily_low1 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( closing_at_daily_low , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      closing_at_daily_low0 = 0.52748632425818;
      closing_at_daily_low1 = -0.52748632425818;
   end;
   else if _dm12 = '1'  then do;
      closing_at_daily_low0 = -0.94737191059254;
      closing_at_daily_low1 = 0.94737191059254;
   end;
   else do;
      closing_at_daily_low0 = .;
      closing_at_daily_low1 = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for day ;
drop dayFriday dayMonday daySaturday daySunday dayThursday dayTuesday
        dayWednesday ;
if missing( day ) then do;
   dayFriday = .;
   dayMonday = .;
   daySaturday = .;
   daySunday = .;
   dayThursday = .;
   dayTuesday = .;
   dayWednesday = .;
end;
else do;
   length _dm9 $ 9; drop _dm9 ;
   _dm9 = put( day , $9. );
   %DMNORMIP( _dm9 )
   _dm_find = 0; drop _dm_find;
   if _dm9 <= 'SUNDAY'  then do;
      if _dm9 <= 'MONDAY'  then do;
         if _dm9 = 'FRIDAY'  then do;
            dayFriday = 0.92645567730267;
            dayMonday = -0.15411290857242;
            daySaturday = -0.15411290857242;
            daySunday = -0.15411290857242;
            dayThursday = -0.15445841391177;
            dayTuesday = -0.15445841391177;
            dayWednesday = -0.15445841391177;
            _dm_find = 1;
         end;
         else do;
            if _dm9 = 'MONDAY'  then do;
               dayFriday = -0.15411290857242;
               dayMonday = 0.92645567730267;
               daySaturday = -0.15411290857242;
               daySunday = -0.15411290857242;
               dayThursday = -0.15445841391177;
               dayTuesday = -0.15445841391177;
               dayWednesday = -0.15445841391177;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm9 = 'SATURDAY'  then do;
            dayFriday = -0.15411290857242;
            dayMonday = -0.15411290857242;
            daySaturday = 0.92645567730267;
            daySunday = -0.15411290857242;
            dayThursday = -0.15445841391177;
            dayTuesday = -0.15445841391177;
            dayWednesday = -0.15445841391177;
            _dm_find = 1;
         end;
         else do;
            if _dm9 = 'SUNDAY'  then do;
               dayFriday = -0.15411290857242;
               dayMonday = -0.15411290857242;
               daySaturday = -0.15411290857242;
               daySunday = 0.92645567730267;
               dayThursday = -0.15445841391177;
               dayTuesday = -0.15445841391177;
               dayWednesday = -0.15445841391177;
               _dm_find = 1;
            end;
         end;
      end;
   end;
   else do;
      if _dm9 <= 'TUESDAY'  then do;
         if _dm9 = 'THURSDAY'  then do;
            dayFriday = -0.15411290857242;
            dayMonday = -0.15411290857242;
            daySaturday = -0.15411290857242;
            daySunday = -0.15411290857242;
            dayThursday = 0.92438330471336;
            dayTuesday = -0.15445841391177;
            dayWednesday = -0.15445841391177;
            _dm_find = 1;
         end;
         else do;
            if _dm9 = 'TUESDAY'  then do;
               dayFriday = -0.15411290857242;
               dayMonday = -0.15411290857242;
               daySaturday = -0.15411290857242;
               daySunday = -0.15411290857242;
               dayThursday = -0.15445841391177;
               dayTuesday = 0.92438330471336;
               dayWednesday = -0.15445841391177;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm9 = 'WEDNESDAY'  then do;
            dayFriday = -0.15411290857242;
            dayMonday = -0.15411290857242;
            daySaturday = -0.15411290857242;
            daySunday = -0.15411290857242;
            dayThursday = -0.15445841391177;
            dayTuesday = -0.15445841391177;
            dayWednesday = 0.92438330471336;
            _dm_find = 1;
         end;
      end;
   end;
   if not _dm_find then do;
      dayFriday = .;
      dayMonday = .;
      daySaturday = .;
      daySunday = .;
      dayThursday = .;
      dayTuesday = .;
      dayWednesday = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for month ;
drop monthApril monthAugust monthDecember monthFebruary monthJanuary monthJuly
         monthJune monthMarch monthMay monthNovember monthOctober
        monthSeptember ;
if missing( month ) then do;
   monthApril = .;
   monthAugust = .;
   monthDecember = .;
   monthFebruary = .;
   monthJanuary = .;
   monthJuly = .;
   monthJune = .;
   monthMarch = .;
   monthMay = .;
   monthNovember = .;
   monthOctober = .;
   monthSeptember = .;
end;
else do;
   length _dm9 $ 9; drop _dm9 ;
   _dm9 = put( month , $9. );
   %DMNORMIP( _dm9 )
   _dm_find = 0; drop _dm_find;
   if _dm9 <= 'JULY'  then do;
      if _dm9 <= 'DECEMBER'  then do;
         if _dm9 <= 'AUGUST'  then do;
            if _dm9 = 'APRIL'  then do;
               monthApril = 0.96381253420201;
               monthAugust = -0.08797475274233;
               monthDecember = -0.08797475274233;
               monthFebruary = -0.08355776011172;
               monthJanuary = -0.08797475274233;
               monthJuly = -0.08797475274233;
               monthJune = -0.0864147520205;
               monthMarch = -0.08797475274233;
               monthMay = -0.08797475274233;
               monthNovember = -0.0864147520205;
               monthOctober = -0.08704098518318;
               monthSeptember = -0.0864147520205;
               _dm_find = 1;
            end;
            else do;
               if _dm9 = 'AUGUST'  then do;
                  monthApril = -0.0864147520205;
                  monthAugust = 0.94672185531749;
                  monthDecember = -0.08797475274233;
                  monthFebruary = -0.08355776011172;
                  monthJanuary = -0.08797475274233;
                  monthJuly = -0.08797475274233;
                  monthJune = -0.0864147520205;
                  monthMarch = -0.08797475274233;
                  monthMay = -0.08797475274233;
                  monthNovember = -0.0864147520205;
                  monthOctober = -0.08704098518318;
                  monthSeptember = -0.0864147520205;
                  _dm_find = 1;
               end;
            end;
         end;
         else do;
            if _dm9 = 'DECEMBER'  then do;
               monthApril = -0.0864147520205;
               monthAugust = -0.08797475274233;
               monthDecember = 0.94672185531749;
               monthFebruary = -0.08355776011172;
               monthJanuary = -0.08797475274233;
               monthJuly = -0.08797475274233;
               monthJune = -0.0864147520205;
               monthMarch = -0.08797475274233;
               monthMay = -0.08797475274233;
               monthNovember = -0.0864147520205;
               monthOctober = -0.08704098518318;
               monthSeptember = -0.0864147520205;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm9 <= 'JANUARY'  then do;
            if _dm9 = 'FEBRUARY'  then do;
               monthApril = -0.0864147520205;
               monthAugust = -0.08797475274233;
               monthDecember = -0.08797475274233;
               monthFebruary = 0.99676703906324;
               monthJanuary = -0.08797475274233;
               monthJuly = -0.08797475274233;
               monthJune = -0.0864147520205;
               monthMarch = -0.08797475274233;
               monthMay = -0.08797475274233;
               monthNovember = -0.0864147520205;
               monthOctober = -0.08704098518318;
               monthSeptember = -0.0864147520205;
               _dm_find = 1;
            end;
            else do;
               if _dm9 = 'JANUARY'  then do;
                  monthApril = -0.0864147520205;
                  monthAugust = -0.08797475274233;
                  monthDecember = -0.08797475274233;
                  monthFebruary = -0.08355776011172;
                  monthJanuary = 0.94672185531749;
                  monthJuly = -0.08797475274233;
                  monthJune = -0.0864147520205;
                  monthMarch = -0.08797475274233;
                  monthMay = -0.08797475274233;
                  monthNovember = -0.0864147520205;
                  monthOctober = -0.08704098518318;
                  monthSeptember = -0.0864147520205;
                  _dm_find = 1;
               end;
            end;
         end;
         else do;
            if _dm9 = 'JULY'  then do;
               monthApril = -0.0864147520205;
               monthAugust = -0.08797475274233;
               monthDecember = -0.08797475274233;
               monthFebruary = -0.08355776011172;
               monthJanuary = -0.08797475274233;
               monthJuly = 0.94672185531749;
               monthJune = -0.0864147520205;
               monthMarch = -0.08797475274233;
               monthMay = -0.08797475274233;
               monthNovember = -0.0864147520205;
               monthOctober = -0.08704098518318;
               monthSeptember = -0.0864147520205;
               _dm_find = 1;
            end;
         end;
      end;
   end;
   else do;
      if _dm9 <= 'MAY'  then do;
         if _dm9 <= 'MARCH'  then do;
            if _dm9 = 'JUNE'  then do;
               monthApril = -0.0864147520205;
               monthAugust = -0.08797475274233;
               monthDecember = -0.08797475274233;
               monthFebruary = -0.08355776011172;
               monthJanuary = -0.08797475274233;
               monthJuly = -0.08797475274233;
               monthJune = 0.96381253420201;
               monthMarch = -0.08797475274233;
               monthMay = -0.08797475274233;
               monthNovember = -0.0864147520205;
               monthOctober = -0.08704098518318;
               monthSeptember = -0.0864147520205;
               _dm_find = 1;
            end;
            else do;
               if _dm9 = 'MARCH'  then do;
                  monthApril = -0.0864147520205;
                  monthAugust = -0.08797475274233;
                  monthDecember = -0.08797475274233;
                  monthFebruary = -0.08355776011172;
                  monthJanuary = -0.08797475274233;
                  monthJuly = -0.08797475274233;
                  monthJune = -0.0864147520205;
                  monthMarch = 0.94672185531749;
                  monthMay = -0.08797475274233;
                  monthNovember = -0.0864147520205;
                  monthOctober = -0.08704098518318;
                  monthSeptember = -0.0864147520205;
                  _dm_find = 1;
               end;
            end;
         end;
         else do;
            if _dm9 = 'MAY'  then do;
               monthApril = -0.0864147520205;
               monthAugust = -0.08797475274233;
               monthDecember = -0.08797475274233;
               monthFebruary = -0.08355776011172;
               monthJanuary = -0.08797475274233;
               monthJuly = -0.08797475274233;
               monthJune = -0.0864147520205;
               monthMarch = -0.08797475274233;
               monthMay = 0.94672185531749;
               monthNovember = -0.0864147520205;
               monthOctober = -0.08704098518318;
               monthSeptember = -0.0864147520205;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm9 <= 'OCTOBER'  then do;
            if _dm9 = 'NOVEMBER'  then do;
               monthApril = -0.0864147520205;
               monthAugust = -0.08797475274233;
               monthDecember = -0.08797475274233;
               monthFebruary = -0.08355776011172;
               monthJanuary = -0.08797475274233;
               monthJuly = -0.08797475274233;
               monthJune = -0.0864147520205;
               monthMarch = -0.08797475274233;
               monthMay = -0.08797475274233;
               monthNovember = 0.96381253420201;
               monthOctober = -0.08704098518318;
               monthSeptember = -0.0864147520205;
               _dm_find = 1;
            end;
            else do;
               if _dm9 = 'OCTOBER'  then do;
                  monthApril = -0.0864147520205;
                  monthAugust = -0.08797475274233;
                  monthDecember = -0.08797475274233;
                  monthFebruary = -0.08355776011172;
                  monthJanuary = -0.08797475274233;
                  monthJuly = -0.08797475274233;
                  monthJune = -0.0864147520205;
                  monthMarch = -0.08797475274233;
                  monthMay = -0.08797475274233;
                  monthNovember = -0.0864147520205;
                  monthOctober = 0.9568781989546;
                  monthSeptember = -0.0864147520205;
                  _dm_find = 1;
               end;
            end;
         end;
         else do;
            if _dm9 = 'SEPTEMBER'  then do;
               monthApril = -0.0864147520205;
               monthAugust = -0.08797475274233;
               monthDecember = -0.08797475274233;
               monthFebruary = -0.08355776011172;
               monthJanuary = -0.08797475274233;
               monthJuly = -0.08797475274233;
               monthJune = -0.0864147520205;
               monthMarch = -0.08797475274233;
               monthMay = -0.08797475274233;
               monthNovember = -0.0864147520205;
               monthOctober = -0.08704098518318;
               monthSeptember = 0.96381253420201;
               _dm_find = 1;
            end;
         end;
      end;
   end;
   if not _dm_find then do;
      monthApril = .;
      monthAugust = .;
      monthDecember = .;
      monthFebruary = .;
      monthJanuary = .;
      monthJuly = .;
      monthJune = .;
      monthMarch = .;
      monthMay = .;
      monthNovember = .;
      monthOctober = .;
      monthSeptember = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for open_equals_closing ;
drop open_equals_closing0 open_equals_closing1 ;
if missing( open_equals_closing ) then do;
   open_equals_closing0 = .;
   open_equals_closing1 = .;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( open_equals_closing , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      open_equals_closing0 = 0.44657593698819;
      open_equals_closing1 = -0.44657593698819;
   end;
   else if _dm12 = '1'  then do;
      open_equals_closing0 = -1.11901624210695;
      open_equals_closing1 = 1.11901624210695;
   end;
   else do;
      open_equals_closing0 = .;
      open_equals_closing1 = .;
      _DM_BAD = 1;
   end;
end;

*** End Class Look-up, Standardization, Replacement ;


*** Omitted Cases;
if _dm_bad then do;
   _SEGMENT_ = .; Distance = .;
   goto CLUSvlex ;
end; *** omitted;

*** Compute Distances and Cluster Membership;
label _SEGMENT_ = 'Segment Id' ;
label Distance = 'Distance' ;
array CLUSvads [4] _temporary_;
drop _vqclus _vqmvar _vqnvar;
_vqmvar = 0;
do _vqclus = 1 to 4; CLUSvads [_vqclus] = 0; end;
if not missing( all_day_maintain0 ) then do;
   CLUSvads [1] + ( all_day_maintain0 - 0.44537463372291 )**2;
   CLUSvads [2] + ( all_day_maintain0 - -1.12203455020927 )**2;
   CLUSvads [3] + ( all_day_maintain0 - 0.44537463372291 )**2;
   CLUSvads [4] + ( all_day_maintain0 - 0.44537463372291 )**2;
end;
else _vqmvar + 0.49999999999999;
if not missing( all_day_maintain1 ) then do;
   CLUSvads [1] + ( all_day_maintain1 - -0.44537463372291 )**2;
   CLUSvads [2] + ( all_day_maintain1 - 1.12203455020927 )**2;
   CLUSvads [3] + ( all_day_maintain1 - -0.44537463372291 )**2;
   CLUSvads [4] + ( all_day_maintain1 - -0.44537463372291 )**2;
end;
else _vqmvar + 0.49999999999999;
if not missing( closing_at_daily_high0 ) then do;
   CLUSvads [1] + ( closing_at_daily_high0 - 0.52748632425818 )**2;
   CLUSvads [2] + ( closing_at_daily_high0 - -0.94737191059254 )**2;
   CLUSvads [3] + ( closing_at_daily_high0 - 0.3108849813562 )**2;
   CLUSvads [4] + ( closing_at_daily_high0 - 0.37086421082271 )**2;
end;
else _vqmvar + 0.49999999999999;
if not missing( closing_at_daily_high1 ) then do;
   CLUSvads [1] + ( closing_at_daily_high1 - -0.52748632425818 )**2;
   CLUSvads [2] + ( closing_at_daily_high1 - 0.94737191059254 )**2;
   CLUSvads [3] + ( closing_at_daily_high1 - -0.3108849813562 )**2;
   CLUSvads [4] + ( closing_at_daily_high1 - -0.37086421082271 )**2;
end;
else _vqmvar + 0.49999999999999;
if not missing( closing_at_daily_low0 ) then do;
   CLUSvads [1] + ( closing_at_daily_low0 - -0.07139550443877 )**2;
   CLUSvads [2] + ( closing_at_daily_low0 - -0.94737191059254 )**2;
   CLUSvads [3] + ( closing_at_daily_low0 - 0.52748632425818 )**2;
   CLUSvads [4] + ( closing_at_daily_low0 - 0.52748632425818 )**2;
end;
else _vqmvar + 0.49999999999999;
if not missing( closing_at_daily_low1 ) then do;
   CLUSvads [1] + ( closing_at_daily_low1 - 0.07139550443877 )**2;
   CLUSvads [2] + ( closing_at_daily_low1 - 0.94737191059254 )**2;
   CLUSvads [3] + ( closing_at_daily_low1 - -0.52748632425818 )**2;
   CLUSvads [4] + ( closing_at_daily_low1 - -0.52748632425818 )**2;
end;
else _vqmvar + 0.49999999999999;
if not missing( dayFriday ) then do;
   CLUSvads [1] + ( dayFriday - -0.08862390336787 )**2;
   CLUSvads [2] + ( dayFriday - -0.13951063038492 )**2;
   CLUSvads [3] + ( dayFriday - 0.18203192521782 )**2;
   CLUSvads [4] + ( dayFriday - -0.15411290857242 )**2;
end;
else _vqmvar + 0.14285714285714;
if not missing( dayMonday ) then do;
   CLUSvads [1] + ( dayMonday - -0.07225165206673 )**2;
   CLUSvads [2] + ( dayMonday - -0.13951063038492 )**2;
   CLUSvads [3] + ( dayMonday - 0.17481851676739 )**2;
   CLUSvads [4] + ( dayMonday - -0.15411290857242 )**2;
end;
else _vqmvar + 0.14285714285714;
if not missing( daySaturday ) then do;
   CLUSvads [1] + ( daySaturday - -0.15411290857242 )**2;
   CLUSvads [2] + ( daySaturday - 0.38617138436512 )**2;
   CLUSvads [3] + ( daySaturday - -0.15267022688233 )**2;
   CLUSvads [4] + ( daySaturday - -0.15411290857242 )**2;
end;
else _vqmvar + 0.14285714285714;
if not missing( daySunday ) then do;
   CLUSvads [1] + ( daySunday - -0.12136840597014 )**2;
   CLUSvads [2] + ( daySunday - 0.3215041523919 )**2;
   CLUSvads [3] + ( daySunday - -0.1223739113905 )**2;
   CLUSvads [4] + ( daySunday - -0.15411290857242 )**2;
end;
else _vqmvar + 0.14285714285714;
if not missing( dayThursday ) then do;
   CLUSvads [1] + ( dayThursday - -0.05965111136592 )**2;
   CLUSvads [2] + ( dayThursday - -0.14196217778869 )**2;
   CLUSvads [3] + ( dayThursday - -0.15445841391176 )**2;
   CLUSvads [4] + ( dayThursday - 0.92438330471335 )**2;
end;
else _vqmvar + 0.14285714285714;
if not missing( dayTuesday ) then do;
   CLUSvads [1] + ( dayTuesday - 0.57784626782164 )**2;
   CLUSvads [2] + ( dayTuesday - -0.13779676574767 )**2;
   CLUSvads [3] + ( dayTuesday - -0.11268750624804 )**2;
   CLUSvads [4] + ( dayTuesday - -0.15445841391177 )**2;
end;
else _vqmvar + 0.14285714285714;
if not missing( dayWednesday ) then do;
   CLUSvads [1] + ( dayWednesday - -0.08253563267009 )**2;
   CLUSvads [2] + ( dayWednesday - -0.14821029585023 )**2;
   CLUSvads [3] + ( dayWednesday - 0.18547035190335 )**2;
   CLUSvads [4] + ( dayWednesday - -0.15445841391177 )**2;
end;
else _vqmvar + 0.14285714285714;
if not missing( monthApril ) then do;
   CLUSvads [1] + ( monthApril - -0.00366957189388 )**2;
   CLUSvads [2] + ( monthApril - 0.00684867494134 )**2;
   CLUSvads [3] + ( monthApril - -0.00228439531375 )**2;
   CLUSvads [4] + ( monthApril - -0.00276833099393 )**2;
end;
else _vqmvar + 0.08333333333333;
if not missing( monthAugust ) then do;
   CLUSvads [1] + ( monthAugust - 0.0060885752631 )**2;
   CLUSvads [2] + ( monthAugust - -0.00208294937057 )**2;
   CLUSvads [3] + ( monthAugust - -0.00370707171209 )**2;
   CLUSvads [4] + ( monthAugust - 0.00816962234287 )**2;
end;
else _vqmvar + 0.08333333333333;
if not missing( monthDecember ) then do;
   CLUSvads [1] + ( monthDecember - 0.00922401952995 )**2;
   CLUSvads [2] + ( monthDecember - 0.01189943722483 )**2;
   CLUSvads [3] + ( monthDecember - -0.01199569607572 )**2;
   CLUSvads [4] + ( monthDecember - -0.00098698480809 )**2;
end;
else _vqmvar + 0.08333333333333;
if not missing( monthFebruary ) then do;
   CLUSvads [1] + ( monthFebruary - 0.00155873921721 )**2;
   CLUSvads [2] + ( monthFebruary - 0.00403614252408 )**2;
   CLUSvads [3] + ( monthFebruary - -0.00278581250985 )**2;
   CLUSvads [4] + ( monthFebruary - -0.00229439026227 )**2;
end;
else _vqmvar + 0.08333333333333;
if not missing( monthJanuary ) then do;
   CLUSvads [1] + ( monthJanuary - -0.00958864607113 )**2;
   CLUSvads [2] + ( monthJanuary - 0.01589440482351 )**2;
   CLUSvads [3] + ( monthJanuary - -0.00508850910603 )**2;
   CLUSvads [4] + ( monthJanuary - -0.00556528838358 )**2;
end;
else _vqmvar + 0.08333333333333;
if not missing( monthJuly ) then do;
   CLUSvads [1] + ( monthJuly - -0.00331775753743 )**2;
   CLUSvads [2] + ( monthJuly - -0.00408043316991 )**2;
   CLUSvads [3] + ( monthJuly - 0.00596299004547 )**2;
   CLUSvads [4] + ( monthJuly - -0.00556528838358 )**2;
end;
else _vqmvar + 0.08333333333333;
if not missing( monthJune ) then do;
   CLUSvads [1] + ( monthJune - -0.00685207882182 )**2;
   CLUSvads [2] + ( monthJune - -0.00328865407625 )**2;
   CLUSvads [3] + ( monthJune - 0.00472646774513 )**2;
   CLUSvads [4] + ( monthJune - 0.00187869239643 )**2;
end;
else _vqmvar + 0.08333333333333;
if not missing( monthMarch ) then do;
   CLUSvads [1] + ( monthMarch - -0.00018231327059 )**2;
   CLUSvads [2] + ( monthMarch - -0.022057787364 )**2;
   CLUSvads [3] + ( monthMarch - 0.0142516144091 )**2;
   CLUSvads [4] + ( monthMarch - 0.00359131876738 )**2;
end;
else _vqmvar + 0.08333333333333;
if not missing( monthMay ) then do;
   CLUSvads [1] + ( monthMay - 0.01549490806364 )**2;
   CLUSvads [2] + ( monthMay - -0.00607791696925 )**2;
   CLUSvads [3] + ( monthMay - -0.00094419692421 )**2;
   CLUSvads [4] + ( monthMay - -0.00556528838358 )**2;
end;
else _vqmvar + 0.08333333333333;
if not missing( monthNovember ) then do;
   CLUSvads [1] + ( monthNovember - -0.00366957189388 )**2;
   CLUSvads [2] + ( monthNovember - 0.0027937433343 )**2;
   CLUSvads [3] + ( monthNovember - -0.00228439531375 )**2;
   CLUSvads [4] + ( monthNovember - 0.00652571578679 )**2;
end;
else _vqmvar + 0.08333333333333;
if not missing( monthOctober ) then do;
   CLUSvads [1] + ( monthOctober - -0.01428298144024 )**2;
   CLUSvads [2] + ( monthOctober - -0.00642946517254 )**2;
   CLUSvads [3] + ( monthOctober - 0.00912780481081 )**2;
   CLUSvads [4] + ( monthOctober - 0.00534124350157 )**2;
end;
else _vqmvar + 0.08333333333333;
if not missing( monthSeptember ) then do;
   CLUSvads [1] + ( monthSeptember - 0.0090604558179 )**2;
   CLUSvads [2] + ( monthSeptember - 0.0027937433343 )**2;
   CLUSvads [3] + ( monthSeptember - -0.00508874053731 )**2;
   CLUSvads [4] + ( monthSeptember - -0.00276833099393 )**2;
end;
else _vqmvar + 0.08333333333333;
if not missing( open_equals_closing0 ) then do;
   CLUSvads [1] + ( open_equals_closing0 - 0.44657593698819 )**2;
   CLUSvads [2] + ( open_equals_closing0 - -1.11901624210695 )**2;
   CLUSvads [3] + ( open_equals_closing0 - 0.44448569375842 )**2;
   CLUSvads [4] + ( open_equals_closing0 - 0.43964853796564 )**2;
end;
else _vqmvar + 0.5;
if not missing( open_equals_closing1 ) then do;
   CLUSvads [1] + ( open_equals_closing1 - -0.44657593698819 )**2;
   CLUSvads [2] + ( open_equals_closing1 - 1.11901624210695 )**2;
   CLUSvads [3] + ( open_equals_closing1 - -0.44448569375842 )**2;
   CLUSvads [4] + ( open_equals_closing1 - -0.43964853796564 )**2;
end;
else _vqmvar + 0.5;
_vqnvar = 5.99999999999999 - _vqmvar;
if _vqnvar <= 1.8417267710901E-11 then do;
   _SEGMENT_ = .; Distance = .;
end;
else do;
   _SEGMENT_ = 1; Distance = CLUSvads [1];
   _vqfzdst = Distance * 0.99999999999988; drop _vqfzdst;
   do _vqclus = 2 to 4;
      if CLUSvads [_vqclus] < _vqfzdst then do;
         _SEGMENT_ = _vqclus; Distance = CLUSvads [_vqclus];
         _vqfzdst = Distance * 0.99999999999988;
      end;
   end;
   Distance = sqrt(Distance * (5.99999999999999 / _vqnvar));
end;
CLUSvlex :;

***************************************;
*** End Scoring Code from PROC DMVQ ***;
***************************************;
*------------------------------------------------------------*;
* Clus: Creating Segment Label;
*------------------------------------------------------------*;
length _SEGMENT_LABEL_ $80;
label _SEGMENT_LABEL_='Segment Description';
if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
else
if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
else
if _SEGMENT_ = 3 then _SEGMENT_LABEL_="Cluster3";
else
if _SEGMENT_ = 4 then _SEGMENT_LABEL_="Cluster4";
