*------------------------------------------------------------*
* Score Log
Date:                22 December 2019
Time:                19:47:56 o'clock
*------------------------------------------------------------*
16433  %let EMEXCEPTIONSTRING=;
16434  *------------------------------------------------------------*;
16435  * SCORE: Prof;
16436  *------------------------------------------------------------*;
16437  %let EM_ACTION = SCORE;
16438  %let syscc = 0;
16439  %macro main;
16440     %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
16441         options MPRINT;
16442     %end;
16443  
16444     filename temp catalog 'sashelp.emexpl.profile_macros.source';
16445     %include temp;
16446     filename temp;
16447  
16448     /* Initialize property macro variables */
16449     %SetProperties;
16450  
16451     %if %upcase(&EM_ACTION) = CREATE %then %do;
16452  
16453         filename temp catalog 'sashelp.emexpl.profile_create.source';
16454         %include temp;
16455         filename temp;
16456         %create;
16457     %end;
16458     %else
16459     %if %upcase(&EM_ACTION) = TRAIN %then %do;
16460  
16461         filename temp catalog 'sashelp.emexpl.profile_train.source';
16462         %include temp;
16463         filename temp;
16464         %train;
16465     %end;
16466  %mend main;
16467  
16468  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
16469 +%macro SetProperties;
16470 +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
16471 +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
16472 +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
16473 +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
16474 +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
16475 +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
16476 +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
16477 +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
16478 +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
16479 +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
16480 +%mend SetProperties;
16481 +
16482 +
16483 +%macro makeVarMacros(level= );
16484 +
16485 +    %let numvars = 0;
16486 +    %let where   = '';
16487 +
16488 +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
16489 +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
16490 +    %else
16491 +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
16492 +
16493 +    %if &level = INTERVAL %then %do;
16494 +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
16495 +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
16496 +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
16497 +    %end;
16498 +    %else %do;
16499 +        %if &level = NOMINAL %then %do;
16500 +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +  &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
16501 +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
16502 +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
16503 +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y', 'D'));
16504 +             %end;
16505 +             %else
16506 +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
16507 +
16508 +        %end;
16509 +        %else %do;
16510 +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
16511 +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
16512 +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
16513 +        %end;
16514 +    %end;
16515 +
16516 +    %if &numvars>0 %then %do;
16517 +         %let numloop = %sysfunc(ceil(&numvars/10000));
16518 +         %let loopcount = 0;
16519 +
16520 +         %do %while((&numloop - &loopcount) > 0);
16521 +             %let first = %eval((&loopcount*10000) + 1);
16522 +             %let last  = %eval(&first + 10000);
16523 +             %let loopcount = %eval(&loopcount +1);
16524 +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
16525 +             filename X catalog "&centry";
16526 +             data _null_;
16527 +                length _STRING_ $80;
16528 +                retain _STRING_ ;
16529 +                file X;
16530 +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
16531 +
16532 +                where &where;
16533 +
16534 +                if _N_=1 then
16535 +                   put '%macro _PROFVAR;';
16536 +
16537 +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
16538 +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
16539 +                   if eof then do;
16540 +                      put _STRING_;
16541 +                      put '%mend _PROFVAR;';
16542 +                   end;
16543 +                end;
16544 +                else do;
16545 +                   put _STRING_;
16546 +                  _string_ = TRIM(NAME);
16547 +                   if eof then do;
16548 +                      put _string_;
16549 +                      put '%mend _PROFVAR;';
16550 +                   end;
16551 +                end;
16552 +             run;
16553 +             filename X;
16554 +         %end;
16555 +    %end;
16556 +
16557 +%mend makeVarMacros;
16558 +
16559 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
16560  *------------------------------------------------------------*;
16561  * End SCORE: Prof;
16562  *------------------------------------------------------------*;

16563  *------------------------------------------------------------*;
16564  * Prof: Scoring DATA data;
16565  *------------------------------------------------------------*;
16566  data EMWS1.Prof_TRAIN
16567  / view=EMWS1.Prof_TRAIN
16568  ;
16569  set EMWS1.Clus_TRAIN
16570  ;
16571  run;

NOTE: DATA STEP view saved on file EMWS1.PROF_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      

16572  quit;

16574  *------------------------------------------------------------*;
16575  * Prof: Computing metadata for TRAIN data;
16576  *------------------------------------------------------------*;

NOTE: View EMWS1.PROF_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
NOTE: View EMWS1.PROF_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.15 seconds
      
